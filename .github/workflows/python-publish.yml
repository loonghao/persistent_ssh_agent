name: Upload Python Package

on:
  push:
    tags:
      - "v*"
  repository_dispatch:
    types: [trigger-python-publish]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write

    steps:
    - name: Set tag variable
      id: set_tag
      run: |
        if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          echo "Using tag from repository_dispatch: ${{ github.event.client_payload.tag }}"
        else
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "Using tag from push event: ${GITHUB_REF#refs/tags/}"
        fi

        # Fallback for tag if environment variables are not available
        if [[ -z "$TAG" ]]; then
          echo "TAG not set, using GITHUB_REF directly"
          REF_TAG=${GITHUB_REF#refs/tags/}
          echo "RELEASE_TAG=$REF_TAG" >> $GITHUB_ENV
        fi

    - name: Debug environment variables
      run: |
        echo "TAG: ${{ env.TAG }}"
        echo "VERSION: ${{ env.VERSION }}"
        echo "GITHUB_REF: ${{ github.ref }}"

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        token: "${{ github.token }}"
        fetch-depth: 0
        ref: main
    - uses: olegtarasov/get-tag@v2.1.4
      id: get_tag_name
      with:
        tagRegex: "v(?<version>.*)"
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install -r requirements-dev.txt
        poetry --version
        poetry build
    # Note that we don't need credentials.
    # We rely on https://docs.pypi.org/trusted-publishers/.
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist
    - name: Debug tag information
      run: |
        echo "GITHUB_REF: ${{ github.ref }}"
        echo "TAG env: ${{ env.TAG }}"
        echo "VERSION env: ${{ env.VERSION }}"
        echo "RELEASE_TAG env: ${{ env.RELEASE_TAG }}"

    - name: Generate changelog
      id: changelog
      uses: jaywcjlove/changelog-generator@main
      with:
        token: ${{ github.token }}
        filter-author: (|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
        filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'
        template: |
          ## Bugs
          {{fix}}
          ## Feature
          {{feat}}
          ## Improve
          {{refactor,perf,clean}}
          ## Misc
          {{chore,style,ci||ðŸ”¶ Nothing change}}
          ## Unknown
          {{__unknown__}}
    # Extract tag from ref as a fallback
    - name: Extract tag from ref
      id: get_ref_tag
      run: |
        REF_TAG="${GITHUB_REF#refs/tags/}"
        echo "REF_TAG=$REF_TAG" >> $GITHUB_OUTPUT
        echo "Extracted tag from ref: $REF_TAG"

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        token: ${{ github.token }}
        tag: ${{ env.RELEASE_TAG || steps.get_ref_tag.outputs.REF_TAG || github.ref_name }}
        name: "Release ${{ env.RELEASE_TAG || steps.get_ref_tag.outputs.REF_TAG || github.ref_name }}"
        allowUpdates: true
        body: |
          Comparing Changes: ${{ steps.changelog.outputs.compareurl }}

          ${{ steps.changelog.outputs.changelog }}
